[ { "title": "Simple Stress Test for REST API", "url": "/posts/simple-stress-test-shell-script/", "categories": "Codes, Shell", "tags": "code-recipes", "date": "2021-02-20 16:45:00 +0000", "snippet": "Why is it needed?As a part of my workflow, I had to repeatedly hit the same REST API end points to simulate load on the system. A shell script works better and is a leaner solution on most Unix systems.This is a simple script which allows you to do that with number of time stress test has to be done. The repetition is provided as an argument.Usage Matrix Spec Value Operating System Mac Shell zsh 5.8 Curl Version 7.77.0 Regular usageScript#!/bin/zshecho &quot;ZSH version ${ZSH_VERSION}...&quot;for i in {1..${1:-1}} do echo &quot;Hitting the end point for ${i} time&quot; curl -X GET &quot;https://httpbin.org/get&quot; -H &quot;accept: application/json&quot; doneSample Response{ &quot;args&quot;: {}, &quot;headers&quot;: { &quot;Accept&quot;: &quot;application/json&quot;, &quot;Host&quot;: &quot;httpbin.org&quot;, &quot;User-Agent&quot;: &quot;curl/7.77.0&quot;, &quot;X-Amzn-Trace-Id&quot;: &quot;Root=1-6216f671-5be6917f342bba8e1610fb04&quot; }, &quot;origin&quot;: &quot;1.1.1.1&quot;, &quot;url&quot;: &quot;https://httpbin.org/get&quot;}UsageNormal usageBy default the curl command hits the API endpoint only once./load-it.shUsing for stress testAn argument of int type can be provided of your choice.The script runs 100 times ./load-it.sh 100Getting some basic metrics for each API callThe above curl command is good for testing response of the API endpoints. To get some extra info out of each API call, you can format the curl response format.To format the response with some additional information, create a file with format as *.txt.Creating curl format fileCreate a file called curl-format.txt{\\n &quot;metrics&quot; : {\\n &quot;time_total&quot;: %{time_total}s,\\n &quot;size_upload&quot;: %{size_upload} bytes,\\n &quot;size_download&quot;: %{size_download} bytes,\\n }\\n}\\nThe file represents a stringified JSON using delimiters like space and \\n for formatting.Updating the script#!/bin/zshecho &quot;ZSH version ${ZSH_VERSION}...&quot;for i in {0..$1} do echo &quot;Hitting the end point for ${i} time&quot; curl -w &quot;@curl-format.txt&quot; -X GET &quot;https://httpbin.org/get&quot; -H &quot;accept: application/json&quot; echo -e &quot;---\\n\\n\\n&quot; doneUsageThe usage remains the same as before. Refer to UsageSample Response{ &quot;args&quot;: {}, &quot;headers&quot;: { &quot;Accept&quot;: &quot;application/json&quot;, &quot;Host&quot;: &quot;httpbin.org&quot;, &quot;User-Agent&quot;: &quot;curl/7.77.0&quot;, &quot;X-Amzn-Trace-Id&quot;: &quot;Root=1-62172079-6715cf5b1b79eb633684ab84&quot; }, &quot;origin&quot;: &quot;1.1.1.1&quot;, &quot;url&quot;: &quot;https://httpbin.org/get&quot;}{ &quot;metrics&quot; : { &quot;time_total&quot;: &quot;1.028342s&quot;, &quot;size_upload&quot;: &quot;0 bytes&quot;, &quot;size_download&quot;: &quot;268 bytes&quot;, }}References Curl Write Out Man Page" } ]
